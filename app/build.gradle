apply plugin: 'com.android.application'

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

///////////////

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.example.longpic"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 20180404
        versionName APP_VERSION
        multiDexEnabled true
        resValue("string", 'app_version', APP_VERSION)
        buildConfigField "boolean", "LEO_DEBUG", "true"
        buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
        buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
//        signingConfig signingConfigs.release
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        release {
            storeFile file("longpic.keystore")
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'longpic'
        }
        debug {
            storeFile file("longpic.keystore")
            storePassword '123456'
            keyPassword '123456'
            keyAlias 'longpic'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            buildConfigField 'String', 'API_SERVER_URL', RELEASE_API_SERVER_URL
            buildConfigField 'String', 'API_SERVER_URL_MALL', RELEASE_API_SERVER_URL_MALL
            buildConfigField 'String', 'IM_SERVER_HOST', RELEASE_IM_SERVER_HOST
            buildConfigField 'int', 'IM_SERVER_PORT', RELEASE_IM_SERVER_PORT
            buildConfigField "boolean", "LEO_DEBUG", RELEASE_LEO_DEBUG
        }
    }
    dexOptions {
        javaMaxHeapSize "2g"
    }

//    //渠道Flavors，我这里写了一些常用的
//    productFlavors {
//        commonsoon {
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "commonsoon"]
//        }
//        zhushou91 {
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "zhushou91"]
//        }
//    }
    allprojects {
        repositories {
            mavenCentral()
            maven { url "https://jitpack.io" }
        }
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName

            if ("true".equals(IS_JENKINS)) {
                newName = 'yj-android-v' + APP_VERSION + '-' + variant.buildType.name + '.apk'
            } else {
                if (variant.buildType.name.equals('debug')) {
                    newName = "yj-android-v${APP_VERSION}-debug.apk"
                } else {
                    newName = 'yj-android-v' + APP_VERSION + '-' + variant.buildType.name + '.apk'
                }
            }

            outputFileName = newName
        }
    }



    dependencies {
        implementation fileTree(include: ['*.jar'], dir: 'libs')
        implementation 'com.android.support:appcompat-v7:26.0.2'
        implementation 'com.android.support.constraint:constraint-layout:1.0.2'
        testImplementation 'junit:junit:4.12'
        compile 'com.sothree.slidinguppanel:library:3.4.0'
        api 'com.github.bumptech.glide:glide:3.8.0'
        api 'jp.wasabeef:glide-transformations:2.0.1'
        compile 'com.google.code.gson:gson:2.3.1'
        compile 'org.greenrobot:eventbus:3.0.0'

    }
}